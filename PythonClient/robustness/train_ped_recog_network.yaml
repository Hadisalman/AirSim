description: Training pedestrian recognition network

target:
  # which virtual cluster you belong to (msrlabs, etc.).
  vc: msrlabspvc9
  # use an Azure cluster (eu1, eu2, ...)
  cluster: eu1

environment:
  image: hadisalman/smoothing:latest

# # azure storage configuration
storage:
  my_output:
    # Replace with the name of the Azure Storage Account you created.
    #   If you followed the tutorial, this should be your_username
    storage_account_name: robustnessws4285631339
    # Specify a name of the container on your blob (ex. phillytools),
    #   to store data, results and code. It will be created if it does not exist.
    container_name: airsim
    # You can optionally specify a mount_path that will be directly accessible
    #   by your jobs. By default it's:
    mount_dir: /mnt/my_output
    is_output: True

  my_data:
    # Replace with the name of the Azure Storage Account you created.
    #   If you followed the tutorial, this should be your_username
    storage_account_name: robustnessws4285631339
    # Specify a name of the container on your blob (ex. phillytools),
    #   to store data, results and code. It will be created if it does not exist.
    container_name: airsim
    # You can optionally specify a mount_path that will be directly accessible
    #   by your jobs. By default it's:
    mount_dir: /mnt/my_data

code:
  # upload the code
  local_dir: $CONFIG_DIR

# data:
#   # don't forget to run with --upload-data
#   local_dir: $CONFIG_DIR

#   # The data will be uploaded to your _default storage.
#   #   Check ``multi_storage.yaml'' for more flexibility.
#   remote_dir: uploaded_data

# schedule two simple jobs, names for each job should be different:
jobs:
- name: ped_recognition/32x32
  sku: G1
  command:
  - python train_ped_recog_network.py /mnt/my_data/datasets/pedestrian_recognition.zip /mnt/my_output/results/ped_recognition/32x32 --img-size 32 --arch resnet18 --pretrained --lr_step_size 30 --lr 0.001

- name: ped_recognition/64x64
  sku: G1
  command:
  - python train_ped_recog_network.py /mnt/my_data/datasets/pedestrian_recognition.zip /mnt/my_output/results/ped_recognition/64x64 --img-size 64 --arch resnet18 --pretrained --lr_step_size 30 --lr 0.001

- name: ped_recognition/224x224
  sku: G1
  command:
  - python train_ped_recog_network.py /mnt/my_data/datasets/pedestrian_recognition.zip /mnt/my_output/results/ped_recognition/224x224 --img-size 224 --arch resnet18 --pretrained --lr_step_size 30 --lr 0.001


- name: ped_recognition2/32x32
  sku: G1
  command:
  - python train_ped_recog_network.py /mnt/my_data/datasets/pedestrian_recognition_2.zip /mnt/my_output/results/ped_recognition2/32x32 --img-size 32 --arch resnet18 --pretrained --lr_step_size 30 --lr 0.001

- name: ped_recognition2/64x64
  sku: G1
  command:
  - python train_ped_recog_network.py /mnt/my_data/datasets/pedestrian_recognition_2.zip /mnt/my_output/results/ped_recognition2/64x64 --img-size 64 --arch resnet18 --pretrained --lr_step_size 30 --lr 0.001

- name: ped_recognition2/224x224
  sku: G1
  command:
  - python train_ped_recog_network.py /mnt/my_data/datasets/pedestrian_recognition_2.zip /mnt/my_output/results/ped_recognition2/224x224 --img-size 224 --arch resnet18 --pretrained --lr_step_size 30 --lr 0.001
